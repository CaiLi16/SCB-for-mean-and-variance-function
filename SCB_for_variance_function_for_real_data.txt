#################The following code is to construct SCB for vairance function and null hypothesis curve for real data#######################
#################choose spline knots#####################
BIC_f<-function(data)
{
x=data[,1]
n=length(x)
Na=floor(1*(n^(1/9)))
Nb=min(floor(5*n^(1/9)),floor(n/4-1))
N=Na
Nopt=Na
BIClist = 0
Nlist = 0
while (N<=Nb){
   y  =data[,2]
   B  =bs(x, df = NULL, knots =c(1:N)/(N+1), degree = 3, intercept = TRUE,  Boundary.knots =c(0,1))
 temp1=solve(t(B)%*%B)
 temp2=t(B)%*%y
  beta=temp1%*%temp2
  yhat=B%*%beta
 temp3=yhat-y
  MSE =sum(temp3*temp3)/n
  qn =N+2
  BIC=log(MSE)+qn*log(n)/n
  BIClist = cbind(BIClist,BIC)
  Nlist = cbind(Nlist,N)
  N=N+1
  }
result = rbind(Nlist,BIClist)
return (result)
  }
##################design matrix###############
X_f<-function(n)
{
X<-matrix(1,nrow=n,ncol=5)
 for(j in 1:5)
 {
   X[,j]=(c(1:n)/n)^(j-1)
  }
return(X)
}
##########bandwidth##################################
h_f<-function(data)
{
    x<-data[,1]
    n<-length(x)
    y<-data[,2]
    X<-X_f(n=n)
temp1<-t(X)%*%X
temp2<-t(X)%*%y
X_inv<-solve(temp1)
a_hat<-X_inv%*%temp2
    e<-y-X%*%a_hat
  e_2<-sum(e*e)
temp3<-c(2*a_hat[3],6*a_hat[4],12*a_hat[5],0,0)
temp4<-X%*%temp3
temp5<-sum(temp4*temp4)
h_rot<-35*e_2/temp5
h_rot<-(h_rot/n)^0.2
return(h_rot)
}
###############kernel function##################
k_f<-function(u)
{
k<-15*(1-u^2)^2/16*((-1<=u)*(u<=1))
return(k)
}
############Nadaraya Waston estimates####################
m_hat_f<-function(data,xgrid,h)
{
x<-data[,1]
y<-data[,2]
n<-length(x)
m<-length(xgrid)
c<-rep(1,m)
c1<-x%*%t(c)
c0<-rep(1,n)
c2<-c0%*%t(xgrid)
M_x<-c1-c2
M_h<-M_x/h
kgrid<-k_f(u=M_h)/h
temp<-t(kgrid)%*%(c0)
temp2<-t(kgrid)%*%y
m_hat<-temp2/temp
m_hat<-cbind(xgrid,m_hat)
return(m_hat)
}
################## plot SCB for variance  function##############################

setwd("D:/paper/SCBmeanfunctiondesign2015")
library(splines)
require(stats)
require(graphics)
    data_y        <-read.csv("strata_pressure.csv",header=FALSE)  
    data_y       <-data_y$V6
   data_y        <-as.matrix(data_y)
   n             <-length(data_y)    
   x             <-c(0:(n-1))/n
   x             <-as.matrix(x)
   data          <-cbind(x,data_y)
   alpha        <- 0.05
  # alpha        =0.0024
  alpha         <-0.545
   h_c           =log(n)^(0.5)
   h_delta_c     =log(n)^(0.25)
        x        <-data[,1]
        x        <-as.matrix(x)
        y         <-data[,2]
        y         <-as.matrix(y)
      result      =BIC_f(data=data)
      result     = result[,(2:dim(result)[2])]
      knot       =result[1,which.min(result[2,])]
      B          =bs(x, knots =c(1:knot)/(knot+1), degree = 3, intercept = TRUE,  Boundary.knots = c(0,1))
      temp1      <-solve(t(B)%*%B)
      temp2      <-t(B)%*%y
      beta       <-temp1%*%temp2
      yhat       <-B%*%beta
      temp3      =y-yhat
      z          <-temp3^2
      data1      <-cbind(x,z)
      h_rot      <-h_f(data=data1)
      h_sig      <-h_rot/h_c
      temp       <-(1-2*h_sig)/400
      xgrid      <-as.matrix(h_sig+c(0:399)*temp)
  xgrid_return   <-xgrid*(705.1-295.5)+295.5
 sigma_sk_hat    <-m_hat_f(data=data1,xgrid=xgrid,h=h_sig)
   sigma_sk_xgrid_hat<-as.matrix(sigma_sk_hat[,2])
  sigma_sk_hat       <-m_hat_f(data=data1,xgrid=xgrid,h=h_sig)
  sigma_sk_hat       <-sigma_sk_hat[,2]
  sigma_sk_hat       <-as.matrix(sigma_sk_hat)
  sigma_sk_hat       <-cbind(xgrid_return,sigma_sk_hat)
##########################sigma0 estimate spline +kernel###################
    result =BIC_f(data=data1)
    result = result[,(2:dim(result)[2])]
    knot   =result[1,which.min(result[2,])]
    B      =bs(x, knots =c(1:knot)/(knot+1), degree = 3, intercept = TRUE,  Boundary.knots = c(0,1))
    temp3  <-solve(t(B)%*%B)
    temp4  <-t(B)%*%z
     beta  <-temp3%*%temp4
sigma_s_hat <-B%*%beta
    delta       =as.matrix((z-sigma_s_hat)^2)
     data2      =cbind(x,delta)
     h_delta    =h_f(data=data2)
     h_delta    =h_delta/h_delta_c
sigma0_xgrid_hat=m_hat_f(data=data2,xgrid=xgrid,h=h_delta)
sigma0_xgrid_hat=sigma0_xgrid_hat[,2]
####################################################       
    temp7      =-0.5*log(1-alpha)
   qalpha      =-log(temp7)
    temp8      =(n*h_sig)^(-0.5)
    temp9      = sigma0_xgrid_hat^0.5
    v1         = temp8*temp9*sqrt(5/7)#####ck
   temp10      =-2*log(h_sig)
    ah         = temp10^0.5
   temp11      =0.5*log(0.75/(pi^2))
   temp12      = v1 *(ah+ah^(-1)*(qalpha+temp11))
       lcl     = sigma_sk_xgrid_hat-temp12
       lcl     = lcl*(lcl>0)*(lcl>0)
       ucl     = sigma_sk_xgrid_hat+temp12
      lcl      <-cbind(xgrid_return,lcl)
       ucl     <-cbind(xgrid_return,ucl)
       mean_z  =mean(z)
       mean_z  =rep(mean_z,n)
      x_return =x*(705.1-209.5)+209.5
       mean_z  =cbind(x_return,mean_z)
       data1   =cbind(x_return,z)
      eq       <- paste("strata pressure in Bulianta Coal Mine, ",100*(1-alpha),"%SCB")
      eq1      <-expression(paste("Potential(",mu,"V)"))
      plot(data1,type="p",xlim=c(295.5,705.1),ylim=c(0,20000),cex=1.5,xlab="distance (m)",ylab="variance function", col =8, main="Record 1 of strata pressure, 45.5% SCB")
      lines(sigma_sk_hat,col=4,lwd =2,lty=2)
      lines(lcl,col=3,lwd =2,lty=1)
      lines(ucl,col=3,lwd =2,lty=1)
      lines(mean_z,col=6,lwd=3,lty=1)
     # legend("topright",legend = c("SCB","estimate curve","a consistent estimate"),col=c(3,2,5),lty = c(1,2,1), lwd=c(2,2,1),text.width = strwidth("1,000,000,000,000,00"))
      
      
     
