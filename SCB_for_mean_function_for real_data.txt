#############The following code is to construct SCB for mean function ###############################################################
#################choose spline knots#####################
BIC_f<-function(data)
{
  x=data[,1]
  n=length(x)
  Na=floor(1*(n^(1/9)))
  Nb=min(floor(5*n^(1/9)),floor(n/4-1))
  N=Na
  Nopt=Na
  BIClist = 0
  Nlist = 0
  while (N<=Nb){
    y    =data[,2]
    knot =seq(0,1,length=N+2)
    B  =bs(x, df = NULL, knots =knot[-c(1,(N+2))], degree = 3, intercept = TRUE, Boundary.knots =knot[c(1,(N+2))])
    temp1=solve(t(B)%*%B)
    temp2=t(B)%*%y
    beta=temp1%*%temp2
    yhat=B%*%beta
    temp3=yhat-y
    MSE =sum(temp3*temp3)/n
    qn =N+2
    BIC=log(MSE)+qn*log(n)/n
    BIClist = cbind(BIClist,BIC)
    Nlist = cbind(Nlist,N)
    N=N+1
  }
  result = rbind(Nlist,BIClist)
  return (result)
}
##################design matrix###############
X_f<-function(n)
{
  X<-matrix(1,nrow=n,ncol=5)
  for(j in 1:5)
  {
    X[,j]=(c(1:n)/n)^(j-1)
  }
  return(X)
}
##########bandwidth##################################
h_f<-function(data)
{
  x<-data[,1]
  n<-length(x)
  y<-data[,2]
  X<-X_f(n=n)
  temp1<-t(X)%*%X
  temp2<-t(X)%*%y
  X_inv<-solve(temp1)
  a_hat<-X_inv%*%temp2
  e<-y-X%*%a_hat
  e_2<-sum(e*e)
  temp3<-c(2*a_hat[3],6*a_hat[4],12*a_hat[5],0,0)
  temp4<-X%*%temp3
  temp5<-sum(temp4*temp4)
  h_rot<-35*e_2/temp5
  h_rot<-(h_rot/n)^0.2
  return(h_rot)
}
###############kernel function##################
k_f<-function(u)
{
  k<-15*(1-u^2)^2/16*((-1<=u)*(u<=1))
  return(k)
}
############Nadaraya Waston estimates####################
m_hat_f<-function(data,xgrid,h)
{
  x<-data[,1]
  y<-data[,2]
  n<-length(x)
  m<-length(xgrid)
  c<-rep(1,m)
  c1<-x%*%t(c)
  c0<-rep(1,n)
  c2<-c0%*%t(xgrid)
  M_x<-c1-c2
  M_h<-M_x/h
  kgrid<-k_f(u=M_h)/h
  temp<-t(kgrid)%*%(c0)
  temp2<-t(kgrid)%*%y
  m_hat<-temp2/temp
  m_hat<-cbind(xgrid,m_hat)
  return(m_hat)
}
###############sigma estiamtes########################
###############splline + kernel #################
sigma_f<-function(data,xgrid,h_sigma_c)
{
  x<-data[,1]
  y<-data[,2]
  result=BIC_f(data=data)
  result = result[,(2:dim(result)[2])]
  knot   =result[1,which.min(result[2,])]
  knots =seq(0,1,length=knot+2)
  B  =bs(x, df = NULL, knots =knots[-c(1,(knot+2))], degree = 3, intercept = TRUE, Boundary.knots =knots[c(1,(knot+2))])
  temp1<-solve(t(B)%*%B)
  temp2<-t(B)%*%y
  beta<-temp1%*%temp2
  yhat<-B%*%beta
  temp3=y-yhat
  z  <-temp3^2
  #newz = z*(z<=quantile(z,0.95))+quantile(z,0.95)*(z>quantile(z,0.95))
  data1<-cbind(x,z)
  h_sig   <-h_f(data=data1)################need by (logn)^delta
  h_sig  <-h_sig/h_sigma_c
  sigma  <-m_hat_f(data=data1,xgrid=xgrid,h=h_sig)
  return(sigma)
}
##################plot SCB for mean function #################################
#####################plot SCB for mean function #################################
setwd("D:/paper/SCBmeanfunctiondesign2015/Êý¾ÝËÑË÷")
library(splines)
require(stats)
require(graphics)
data_y        <-read.csv("strata_pressure.csv",header=FALSE)  
data_y        <-data_y$V6
data_y_Case1  <-as.matrix(data_y)
n             <-length(data_y_Case1)  
x             <-c(0:(n-1))/n
x             <-as.matrix(x)

#alpha       =0.05
alpha        =0.847
#alpha       =0.492
h_c          =log(n)^(0.25)
h_sigma_c    =log(n)^(0.25)

data         <-cbind(x,data_y_Case1)
hrot         =h_f(data=data)    
h_m          =hrot/h_c
temp         <-(1-2*h_m)/400
xgrid        <-as.matrix(h_m+c(0:399)*temp)
T_grid       =xgrid
temp1        =m_hat_f(data=data,xgrid=xgrid,h=h_m)
mhat_xgrid   =as.matrix(temp1[,2])
m_hat        = temp1=m_hat_f(data=data,xgrid=xgrid,h=h_m)
m_hat        =m_hat[,2]
m_hat        =as.matrix( m_hat)
x_return     <-xgrid*(705.1-295.5)+295.5
m_hat        =cbind(x_return,m_hat)
temp2        =sigma_f(data=data,xgrid=xgrid,h_sigma_c=h_sigma_c)
sigmasq_hat =as.matrix(temp2[,2])
temp3       =-0.5*log(1-alpha)
qalpha      =-log(temp3)
temp4       =(n*h_m)^(-0.5)
temp5       =sigmasq_hat^0.5
v1          = temp4*temp5*sqrt(5/7) #####Ck
temp6       =-2*log(h_m)
ah          = temp6^0.5
temp7       =0.5*log(0.75/(pi^2))
temp8       = v1 *(ah+ah^(-1)*(qalpha+temp7))
lcl         =mhat_xgrid-temp8
ucl         =mhat_xgrid+temp8
lcl         =cbind(x_return,lcl)
ucl         =cbind(x_return,ucl)   
x_return_all <- seq(from=295.5,to=705.1,by=0.8)
#eq <-paste("ERP about metaphor semantic integration, ",100*(1-alpha),"%SCB")
eq1           <-expression(paste("mine pressure(KN ","/",m^2,")"))
data          <-cbind(x_return_all,data_y_Case1)
plot(data,type="p",ylab=eq1,xlab="distance (m)",xlim=c(295.5,705.1),ylim=c(200,500),cex=1.5,col =8,main="Record 1 of strata pressure, 15.3% SCB")
lines(m_hat,col=4,lwd =2,lty=2)
lines(lcl,col=3,lwd =2,lty=1)
lines(ucl,col=3,lwd =2,lty=1)
